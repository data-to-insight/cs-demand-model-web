{"version":3,"file":"static/js/437.0d7103c0.chunk.js","mappings":"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","sources":["../node_modules/@sfdl/prpc/dist/esm/api|lazy|/^/.//.*$/|groupOptions: {}|namespace object","features/api/apiSlice.ts","features/model/modelSlice.ts","features/view/viewSlice.ts","features/error/errorSlice.ts","app/store.ts","t2/components/BoxPage.tsx","t2/components/ButtonBarComponent.tsx","api.ts","hooks/api.ts","t2/components/ButtonComponent.tsx","t2/components/SideBarPage.styles.ts","t2/components/SideBarPage.tsx","t2/components/ParagraphComponent.tsx","t2/components/ChartComponent.tsx","pages/Pages.styles.ts","t2/components/ExpandoComponent.tsx","t2/components/FragmentComponent.tsx","utils/dates.ts","t2/components/DateSelectComponent.tsx","t2/components/TextFieldComponent.tsx","t2/components/FileUploadComponent.tsx","t2/components/ErrorComponent.tsx","t2/components/SelectComponent.tsx","t2/viewFactory.tsx","App.tsx"],"sourcesContent":["var map = {\n\t\"./\": [\n\t\t7281\n\t],\n\t\"./index\": [\n\t\t7281\n\t],\n\t\"./index.js\": [\n\t\t7281\n\t],\n\t\"./pyodide\": [\n\t\t2314,\n\t\t314\n\t],\n\t\"./pyodide.js\": [\n\t\t2314,\n\t\t314\n\t],\n\t\"./static\": [\n\t\t8302,\n\t\t302\n\t],\n\t\"./static.js\": [\n\t\t8302,\n\t\t302\n\t],\n\t\"./web\": [\n\t\t8867,\n\t\t867\n\t],\n\t\"./web.js\": [\n\t\t8867,\n\t\t867\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function() { return Object.keys(map); };\nwebpackAsyncContext.id = 9271;\nmodule.exports = webpackAsyncContext;","import {createSlice} from '@reduxjs/toolkit'\nimport {LoadStatus} from \"@sfdl/prpc\";\n\nexport type ApiState = {\n  state: LoadStatus\n}\n\nexport const apiSlice = createSlice({\n  name: 'api',\n  initialState: {\n    state: LoadStatus.IDLE,\n  } as ApiState,\n  reducers: {\n    setApiState: (state, action) => {\n      state.state = action.payload as LoadStatus;\n    },\n  },\n})\n\nexport const selectApiState = (state: any) => state.api.state\nexport const { setApiState } = apiSlice.actions\nexport default apiSlice.reducer\n","import {createSlice} from '@reduxjs/toolkit'\n\n\nexport const modelSlice = createSlice({\n  name: 'model',\n  initialState: {\n    model: {},\n  },\n  reducers: {\n    setCurrentState: (state, action) => {\n      state.model = action.payload;\n    },\n    updateStateProperty: (state, action) => {\n      const model = state.model as any;\n      model[action.payload.property] = action.payload.value;\n    }\n  },\n})\n\nexport const selectStateProperty = (property: string) => (state: any) => state.model.model[property];\nexport const selectModel = (state: any) => state.model.model;\nexport const { setCurrentState, updateStateProperty } = modelSlice.actions\nexport default modelSlice.reducer\n","import {createSlice} from '@reduxjs/toolkit'\n\n\nexport const viewSlice = createSlice({\n  name: 'view',\n  initialState: {\n    currentView: null,\n    loading: false,\n  },\n  reducers: {\n    setCurrentView: (state, action) => {\n      state.currentView = action.payload;\n      state.loading = false;\n    },\n    setLoading: (state, action) => {\n      state.loading = action.payload;\n    },\n  },\n})\n\nexport const selectCurrentView = (state: any) => state.view.currentView\nexport const selectLoading = (state: any) => state.view.loading\nexport const { setCurrentView, setLoading } = viewSlice.actions\nexport default viewSlice.reducer\n","import {createSlice} from '@reduxjs/toolkit'\n\n\nexport const errorSlice = createSlice({\n  name: 'view',\n  initialState: {\n    errors: {}\n  },\n  reducers: {\n    setErrors: (state, action) => {\n      state.errors = action.payload;\n    },\n  },\n})\n\nexport const selectErrorsForProperty = (property: string) => (state: any) => state.error.errors[property];\nexport const { setErrors } = errorSlice.actions\nexport default errorSlice.reducer\n","import { configureStore } from '@reduxjs/toolkit';\nimport apiReducer from '../features/api/apiSlice';\nimport modelReducer from '../features/model/modelSlice';\nimport viewReducer from '../features/view/viewSlice';\nimport errorReducer from '../features/error/errorSlice';\n\nconst store = configureStore({\n  reducer: {\n    api: apiReducer,\n    view: viewReducer,\n    model: modelReducer,\n    error: errorReducer,\n  },\n});\n\nexport type AppDispatch = typeof store.dispatch\nexport default store;\n\n","import React from \"react\";\nimport {Box} from \"@mui/material\";\nimport { Block } from \"@sfdl/sf-mui-components\";\n\nimport ViewFactory, {ViewProps} from \"../viewFactory\";\n\ninterface BoxPageProps extends ViewProps {\n  components: [any];\n}\n\nconst BoxPage = (props: BoxPageProps) => {\n  return (\n    <Box flexGrow={1}>\n      { props.components && props.components.map((componentProps) => {\n        return <Block key={componentProps.id} spacing=\"blockLarge\"><ViewFactory viewData={componentProps} /></Block>\n      })}\n    </Box>\n  )\n}\n\nexport default BoxPage;\n","import React from \"react\";\n\nimport {\n  DualButton,\n} from \"@sfdl/sf-mui-components\";\nimport ViewFactory, {ViewProps} from \"../viewFactory\";\nimport {ButtonProps} from \"./ButtonComponent\";\n\nexport interface ButtonBarProps extends ViewProps {\n  buttons: Array<ButtonProps>;\n}\n\nconst ButtonBarComponent = (props: ButtonBarProps) => {\n  const { buttons } = props;\n\n  const Container = buttons.length > 1 ? DualButton : React.Fragment;\n\n  return (\n    <Container>\n      { buttons && buttons.map((buttonProps) => <ViewFactory key={buttonProps.id} viewData={buttonProps} />)}\n    </Container>\n  )\n\n}\n\nexport default ButtonBarComponent;","import queryString from \"query-string\";\nimport { IAPI, APITransport, APICallback, LoadStatus, createApi } from \"@sfdl/prpc\";\nimport store from './app/store';\nimport {setApiState} from \"./features/api/apiSlice\";\nimport {setCurrentView, setLoading} from \"./features/view/viewSlice\";\nimport {setCurrentState} from \"./features/model/modelSlice\";\nimport {setErrors} from \"./features/error/errorSlice\";\n\nconst appName = \"cs_demand_model.rpc:app\";\nconst defaultNativePackages = ['numpy', 'pandas'];\nconst defaultPackages = ['cs-demand-model[pyodide]']\n\nconst dispatch = store.dispatch;\n\ntype T2Response = {\n  view: unknown,\n  state: unknown,\n  errors?: unknown\n}\n\n\nconst initApi = async (callback: APICallback): Promise<IAPI> => {\n  const parsed = queryString.parse(window.location.search);\n  const apiConfig: any = {\n    options: { appName }\n  };\n  if (parsed.url) {\n    apiConfig.transport = APITransport.WEB;\n    apiConfig.options.url = parsed.url;\n  } else {\n    apiConfig.transport = APITransport.PYODIDE;\n    apiConfig.options.nativePackages = defaultNativePackages;\n    apiConfig.options.packages = parsed.packages ? parsed.packages : defaultPackages;\n  }\n  return await createApi(apiConfig, callback);\n};\n\nconst apiStatusCallback = (payload: any) => {\n  if (payload !== LoadStatus.READY) {\n    // We don't fire ready since we need to make sure we are ready too\n    store.dispatch(setApiState(payload));\n  }\n};\n\nconst apiCallCallback = (response: T2Response) => {\n  dispatch(setCurrentView(response.view))\n  dispatch(setErrors(response.errors || {}));\n  dispatch(setCurrentState(response.state))\n}\n\n\nclass API {\n  api?: IAPI = undefined;\n\n  constructor() {\n    initApi(apiStatusCallback).then((api) => {\n      this.api = api;\n      dispatch(setApiState(LoadStatus.READY));\n    }).catch((reason) => {\n      dispatch(setApiState(LoadStatus.ERROR));\n    })\n  }\n\n  init = () => {\n    if (!this.api) {\n      dispatch(setApiState(LoadStatus.ERROR));\n      throw new Error(\"API is not in READY state\");\n    }\n    this.api.call(\"action\", {action: \"init\"}).then(apiCallCallback).catch((reason) => {\n      dispatch(setApiState(LoadStatus.ERROR));\n    })\n  }\n\n  call(action: string, data: {}) {\n    if (!this.api) {\n      dispatch(setApiState(LoadStatus.ERROR));\n      throw new Error(\"API is not in READY state\");\n    }\n    dispatch(setLoading(true))\n    this.api.call(\"action\", {action, data}).then(apiCallCallback).catch((reason) => {\n      dispatch(setCurrentView({id: \"error\", type: \"error\", text: reason.message}))\n    })\n  }\n\n\n}\n\nexport default new API();\n","import api from \"../api\";\n\n\nconst useApi = () => {\n  return api;\n}\n\nexport { useApi }\n","import React from \"react\";\nimport { Button, Icon } from \"@mui/material\";\nimport {ViewProps} from \"../viewFactory\";\nimport {useApi} from \"../../hooks/api\";\nimport {useSelector} from \"react-redux\";\nimport {selectModel} from \"../../features/model/modelSlice\";\n\nexport interface ButtonProps extends ViewProps {\n  text: string,\n  variant?: \"text\" | \"contained\" | \"outlined\" | undefined,\n  action: string,\n  disabled? : boolean,\n  start_icon?: string;\n  end_icon?: string;\n}\n\nconst ButtonComponent = (props: ButtonProps) => {\n  const { text, variant, action, disabled} = props;\n  const model = useSelector(selectModel);\n  const api = useApi();\n\n  const onClick = () => {\n    api.call(action, model);\n  }\n\n  const startIcon = props.start_icon ? <Icon>{props.start_icon}</Icon> : undefined;\n  const endIcon = props.end_icon ? <Icon>{props.end_icon}</Icon> : undefined;\n\n  return (\n    <Button variant={variant || \"contained\"} onClick={onClick} disabled={disabled}\n      startIcon={startIcon} endIcon={endIcon}\n    >\n      { text }\n    </Button>\n  )\n\n}\n\nexport default ButtonComponent;\n","const DashboardGridItem = {\n  height: \"80vh\",\n  overflowY: \"auto\" as \"auto\", //this weirdness is because TS lacks type expansion support for overflowY. It will expand to string, which is invalid for this property\n};\n\nexport { DashboardGridItem };","import React from \"react\";\nimport { Block } from \"@sfdl/sf-mui-components\";\n\nimport ViewFactory, {ViewProps} from \"../viewFactory\";\nimport { Box, Grid } from \"@mui/material\";\nimport { DashboardGridItem } from \"./SideBarPage.styles\";\n\ninterface SideBarPageProps extends ViewProps {\n  sidebar: [ViewProps];\n  main: [ViewProps]\n}\n\nconst SideBarPage = (props: SideBarPageProps) => {\n  return (\n    <Box flexGrow={1}>\n      <Grid container>\n        <Grid xs={5} item style={DashboardGridItem}>\n          { props.sidebar && props.sidebar.map((componentProps) => {\n            return <Block key={componentProps.id} spacing=\"blockLarge\"><ViewFactory viewData={componentProps} /></Block>\n          })}\n        </Grid>\n        <Grid item xs={7} style={DashboardGridItem}>\n          { props.main && props.main.map((componentProps) => {\n            return <Block key={componentProps.id} spacing=\"blockLarge\"><ViewFactory viewData={componentProps} /></Block>\n          })}\n        </Grid>\n      </Grid>\n    </Box>\n  )\n}\n\nexport default SideBarPage;\n","import React from \"react\";\nimport { Typography } from \"@mui/material\";\nimport {ViewProps} from \"../viewFactory\";\n\nexport interface ParagraphComponentProps extends ViewProps {\n  text: string;\n  strong: boolean;\n}\n\nconst ParagraphComponent = (props: ParagraphComponentProps) => {\n  const Wrapper = props.strong ? (props: any) => (<strong>{props.children}</strong>) : React.Fragment;\n  return (\n    <Typography>\n        <Wrapper>\n        {props.text}\n        </Wrapper>\n    </Typography>\n  )\n}\n\nexport default ParagraphComponent;\n","import React from \"react\";\nimport Plot from 'react-plotly.js';\nimport * as Plotly from \"plotly.js\";\nimport {ViewProps} from \"../viewFactory\";\n\nexport interface ChartComponentProps extends ViewProps {\n  chart: string;\n}\n\nconst ChartComponent = (props: ChartComponentProps) => {\n  const {data, layout} = JSON.parse(props.chart)\n  return (\n    <Plot data={data as Plotly.Data[]} layout={layout as Plotly.Layout}/>\n  )\n}\n\nexport default ChartComponent;\n","import styled from \"@emotion/styled\";\nimport { spacing } from \"@sfdl/sf-mui-components\";\n\nexport const Pre = styled.pre`\n  white-space: normal;\n  word-wrap: break-word;\n`;\n\nexport const Aligner = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-evenly;\n`;\n\nexport const Justifier = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: start;\n`;\n\nexport const SpaceBetween = styled.div`\n  margin-right: ${spacing.m};\n`;\n\nexport const PaddedBox = styled.div`\n  margin: 0 ${spacing.s};\n`;\n","import React from \"react\";\nimport { Expando } from \"@sfdl/sf-mui-components\";\nimport { PaddedBox } from \"pages/Pages.styles\";\nimport { Block } from \"@sfdl/sf-mui-components\";\nimport {RenderList, ViewProps} from \"../viewFactory\";\n\nexport interface ExpandoComponentProps extends ViewProps {\n  components: [any];\n  title: string;\n}\n\nconst ExpandoComponent = (props: ExpandoComponentProps) => {\n\n  return (\n    <PaddedBox>\n      <Expando title={props.title} id={props.id}>\n        <RenderList wrapper={Block}>{props.components}</RenderList>\n      </Expando>\n    </PaddedBox>\n  )\n\n}\n\nexport default ExpandoComponent;\n","import React from \"react\";\nimport { Block } from \"@sfdl/sf-mui-components\";\nimport {RenderList, ViewProps} from \"../viewFactory\";\n\nexport interface FragmentComponentProps extends ViewProps {\n  components: [any];\n  padded?: boolean;\n}\n\nconst FragmentComponent = (props: FragmentComponentProps) => {\n  const wrap = props.padded ? Block : undefined;\n  return (\n      <RenderList wrap={wrap}>{props.components}</RenderList>\n  )\n\n}\n\nexport default FragmentComponent;\n","import { DateObj } from \"@sfdl/sf-mui-components\";\nimport moment from \"moment\";\n\nexport const isNotEmptyDate = (dateObj: DateObj) => {\n  const output =\n    dateObj.day !== \"\" && dateObj.month !== \"\" && dateObj.year !== \"\";\n\n  return output;\n};\n\nexport const isoToDateObj = (value: string): DateObj => {\n  const [year, month, day] = value.split('-');\n  const monthName = moment(month, 'MM').format('MMMM');\n  return {year, month: monthName, day: `${parseInt(day)}`};\n}\n\nexport const dateObjToIso = (value: DateObj): string => {\n  return moment(`${value.day} ${value.month} ${value.year}`, \"D MMM YYYY\").format(\"YYYY-MM-DD\");\n}","import React from \"react\";\n\nimport {ViewProps} from \"../viewFactory\";\nimport {Alert, Typography} from \"@mui/material\";\nimport { Block, DateSelect } from \"@sfdl/sf-mui-components\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {selectStateProperty, updateStateProperty} from \"../../features/model/modelSlice\";\nimport {isoToDateObj, dateObjToIso} from \"../../utils/dates\";\nimport {DateObj} from \"@sfdl/sf-mui-components/dist/types/components/inputs/dateselect/DateSelect\";\nimport {selectErrorsForProperty} from \"../../features/error/errorSlice\";\n\nexport interface DateSelectComponentProps extends ViewProps {\n  title: string;\n}\n\nconst DateSelectComponent = (props: DateSelectComponentProps) => {\n  const dispatch = useDispatch();\n  const value = useSelector(selectStateProperty(props.id));\n  const error = useSelector(selectErrorsForProperty(props.id));\n\n  const dateObj = value ? isoToDateObj(value) : {day: \"\", month: \"\", year: \"\"};\n\n  const onChange = (value: DateObj) => {\n    dispatch(updateStateProperty({property: props.id, value: dateObjToIso(value)}))\n  }\n\n  return (\n    <>\n      <Typography variant=\"subtitle2\">{props.title}</Typography>\n      { error && (\n        <Block><Alert severity=\"error\">{error}</Alert></Block>\n      )}\n      <DateSelect day={dateObj.day} month={dateObj.month} year={dateObj.year} onChange={onChange} />\n    </>\n  )\n\n}\n\nexport default DateSelectComponent;\n","import React from \"react\";\nimport Icon from '@mui/material/Icon';\nimport InputAdornment from '@mui/material/InputAdornment';\n\nimport {ViewProps} from \"../viewFactory\";\nimport {Typography, TextField, Alert} from \"@mui/material\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {selectStateProperty, updateStateProperty} from \"../../features/model/modelSlice\";\nimport { Block } from \"@sfdl/sf-mui-components\";\nimport {selectErrorsForProperty} from \"../../features/error/errorSlice\";\n\nexport interface TextFieldComponentProps extends ViewProps {\n  input_props: any;\n  title: string;\n  start_icon?: string;\n  end_icon?: string;\n}\n\nconst TextFieldComponent = (props: TextFieldComponentProps) => {\n  const dispatch = useDispatch();\n  const value = useSelector(selectStateProperty(props.id));\n  const error = useSelector(selectErrorsForProperty(props.id));\n  const onChange = (event: any) => {\n    const value = event.target.value;\n    dispatch(updateStateProperty({property: props.id, value: value}))\n  }\n\n  const InputProps: any = {}\n  if (props.start_icon) {\n    InputProps['startAdornment'] = (\n      <InputAdornment position=\"start\">\n        <Icon>{props.start_icon}</Icon>\n      </InputAdornment>\n    )\n  }\n  if (props.end_icon) {\n    InputProps['endAdornment'] = (\n      <InputAdornment position=\"end\">\n        <Icon>{props.end_icon}</Icon>\n      </InputAdornment>\n    )\n  }\n\n  console.log(\"StartIcon\", InputProps)\n\n  return (\n    <>\n      <Typography variant=\"subtitle2\">{props.title}</Typography>\n      { error && (\n        <Block><Alert severity=\"error\">{error}</Alert></Block>\n      )}\n      <TextField value={value || \"\"} InputProps={InputProps} inputProps={props.input_props}  onChange={onChange}/>\n    </>\n  )\n\n}\n\nexport default TextFieldComponent;\n","import React from \"react\";\n\nimport {ViewProps} from \"../viewFactory\";\nimport {useSelector} from \"react-redux\";\nimport {selectStateProperty} from \"../../features/model/modelSlice\";\nimport { Upload as Uploader } from \"@sfdl/sf-mui-components\";\nimport {useApi} from \"../../hooks/api\";\n\nexport interface FileUploadComponentProps extends ViewProps {\n  title: string,\n  action: string,\n}\n\nconst FileUploadComponent = (props: FileUploadComponentProps) => {\n  const api = useApi();\n  const fileList = useSelector(selectStateProperty(\"files\"))\n  const onUploadReady = (files: any) => {\n    console.log(\"onUploadReady\", files);\n\n    api.call(props.action, files)\n  }\n  // const fileList =\n  return (\n    <>\n      <Uploader label={props.title} onUploadReady={onUploadReady} fileList={fileList}/>\n    </>\n  )\n\n}\n\nexport default FileUploadComponent;\n","import React from \"react\";\nimport {Alert} from \"@mui/material\";\n\nexport interface ErrorComponentProps {\n  text: string;\n}\n\nconst ErrorComponent = (props: ErrorComponentProps) => {\n  const text = props.text ? props.text : \"An error occurred.\"\n  return <Alert severity=\"error\">{text}</Alert>\n}\n\nexport default ErrorComponent;\n","import React from \"react\";\n\nimport {ViewProps} from \"../viewFactory\";\nimport {Typography, Select, MenuItem, Alert} from \"@mui/material\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {selectModel, selectStateProperty, updateStateProperty} from \"../../features/model/modelSlice\";\nimport { Block } from \"@sfdl/sf-mui-components\";\nimport {selectErrorsForProperty} from \"../../features/error/errorSlice\";\nimport {useApi} from \"../../hooks/api\";\n\nexport interface SelectComponentProps extends ViewProps {\n  title: string;\n  options: [{ value: string; label: string }];\n  auto_action?: string;\n}\n\nconst SelectComponent = (props: SelectComponentProps) => {\n  const dispatch = useDispatch();\n  const value = useSelector(selectStateProperty(props.id));\n  const error = useSelector(selectErrorsForProperty(props.id));\n  const model = useSelector(selectModel);\n  const api = useApi();\n\n  const onChange = (event: any) => {\n    const value = event.target.value;\n    dispatch(updateStateProperty({property: props.id, value: value}))\n    if (props.auto_action) {\n      const newModel = {...model};\n      newModel[props.id] = value;\n      api.call(props.auto_action, newModel);\n    }\n  }\n\n  console.log(\"VALUE\", value);\n\n  return (\n    <>\n      <Typography variant=\"subtitle2\">{props.title}</Typography>\n      { error && (\n        <Block><Alert severity=\"error\">{error}</Alert></Block>\n      )}\n      <Select onChange={onChange} value={value || props.options[0]}>\n        { props.options && props.options.map(({label, value}) => (\n          <MenuItem key={value} value={value}>{label}</MenuItem>\n        ))}\n      </Select>\n    </>\n  )\n\n}\n\nexport default SelectComponent;\n","import React from \"react\";\nimport BoxPage from \"./components/BoxPage\";\nimport ButtonBarComponent from \"./components/ButtonBarComponent\";\nimport ButtonComponent from \"./components/ButtonComponent\";\nimport SideBarPage from \"./components/SideBarPage\";\nimport ParagraphComponent from \"./components/ParagraphComponent\";\nimport ChartComponent from \"./components/ChartComponent\";\nimport ExpandoComponent from \"./components/ExpandoComponent\";\nimport FragmentComponent from \"./components/FragmentComponent\";\nimport DateSelectComponent from \"./components/DateSelectComponent\";\nimport TextFieldComponent from \"./components/TextFieldComponent\";\nimport FileUploadComponent from \"./components/FileUploadComponent\";\nimport ErrorComponent from \"./components/ErrorComponent\";\nimport SelectComponent from \"./components/SelectComponent\";\n\nexport interface ViewProps {\n  id: string;\n  type: string;\n}\n\nexport interface ViewFactoryProps {\n  viewData: ViewProps;\n}\n\nconst components: Record<string, any> = {\n  boxpage: BoxPage,\n  sidebarpage: SideBarPage,\n  paragraph: ParagraphComponent,\n  buttonbar: ButtonBarComponent,\n  button: ButtonComponent,\n  chart: ChartComponent,\n  expando: ExpandoComponent,\n  fragment: FragmentComponent,\n  dateselect: DateSelectComponent,\n  select: SelectComponent,\n  textfield: TextFieldComponent,\n  fileupload: FileUploadComponent,\n  error: ErrorComponent,\n}\n\nconst ViewFactory = (props: ViewFactoryProps) => {\n  const {viewData} = props;\n\n  if (components[viewData.type]) {\n    const C = components[viewData.type];\n    return <C key={viewData.id} {...viewData} />\n  } else {\n    return <ErrorComponent text={`Missing component: ${viewData.type}`}/>\n  }\n}\n\nexport const RenderList = (props: any) => {\n  const {children} = props;\n  const Wrap = props.wrap ? props.wrap : React.Fragment;\n  return (\n    <>\n    { children && children.map((componentProps: ViewProps) => {\n      return (<Wrap key={componentProps.id}><ViewFactory viewData={componentProps} /></Wrap>)\n    })}\n    </>\n    )\n    }\n\nexport default ViewFactory","import React, {useEffect} from \"react\";\nimport {Provider as ReduxProvider, useSelector} from 'react-redux';\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport Alert from '@mui/material/Alert';\nimport { Body, Loader, Container, theme as SFTheme } from \"@sfdl/sf-mui-components\";\nimport store from './app/store';\nimport {selectApiState} from \"./features/api/apiSlice\";\nimport {selectCurrentView, selectLoading} from \"./features/view/viewSlice\";\nimport ViewFactory from \"./t2/viewFactory\";\n\nimport {LoadStatus} from \"@sfdl/prpc\";\nimport {useApi} from \"./hooks/api\";\n\n\nconst theme = createTheme(SFTheme);\n\nconst ReduxApp = () => {\n  const api = useApi();\n  const apiState = useSelector(selectApiState);\n  const currentView = useSelector(selectCurrentView);\n  const loading = useSelector(selectLoading);\n\n  const ready = apiState === LoadStatus.READY;\n  const error = apiState === LoadStatus.ERROR;\n\n  useEffect(() => {\n    if (ready) {\n      api.init()\n    }\n  }, [api, ready])\n\n  if (error) {\n    return <Alert severity=\"error\">Failed to load the API. Please refresh your page to try again.</Alert>\n  } else if (currentView) {\n    return  (\n      <>\n        <ViewFactory viewData={currentView} />\n        {loading && <Loader type=\"cover\" />}\n      </>\n    )\n  } else {\n    return <Loader type=\"cover\" />\n  }\n\n}\n\nconst BodyWithState = () => {\n  const apiState = useSelector(selectApiState);\n  return (\n    <Body title=\"CLA Placement Demand Modelling Tool\" chip={`API: ${apiState}`}>\n      <ReduxApp />\n    </Body>\n\n  )\n}\n\nconst App = () => {\n  return (\n    <ReduxProvider store={store}>\n      <ThemeProvider theme={theme}>\n        <Container>\n          <BodyWithState />\n        </Container>\n      </ThemeProvider>\n    </ReduxProvider>\n  );\n}\n\nexport default App;\n"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","all","slice","keys","Object","module","exports","apiSlice","createSlice","name","initialState","state","LoadStatus","reducers","setApiState","action","payload","selectApiState","api","actions","modelSlice","model","setCurrentState","updateStateProperty","property","value","selectStateProperty","selectModel","viewSlice","currentView","loading","setCurrentView","setLoading","selectCurrentView","view","selectLoading","errorSlice","errors","setErrors","selectErrorsForProperty","error","configureStore","reducer","apiReducer","viewReducer","modelReducer","errorReducer","props","Box","flexGrow","components","componentProps","spacing","viewData","buttons","Container","length","DualButton","React","buttonProps","defaultNativePackages","defaultPackages","dispatch","store","initApi","callback","parsed","queryString","window","location","search","apiConfig","options","appName","url","transport","APITransport","nativePackages","packages","createApi","apiStatusCallback","apiCallCallback","response","API","undefined","init","call","catch","reason","data","this","type","text","message","useApi","variant","disabled","useSelector","startIcon","start_icon","Icon","endIcon","end_icon","Button","onClick","DashboardGridItem","height","overflowY","Grid","container","xs","item","style","sidebar","main","Wrapper","strong","children","Typography","JSON","parse","chart","layout","PaddedBox","styled","title","RenderList","wrapper","Block","wrap","padded","dateObjToIso","moment","day","month","year","format","useDispatch","dateObj","split","parseInt","isoToDateObj","Alert","severity","onChange","InputProps","InputAdornment","position","console","log","TextField","inputProps","input_props","event","target","fileList","label","onUploadReady","files","Select","auto_action","newModel","MenuItem","boxpage","BoxPage","sidebarpage","SideBarPage","paragraph","ParagraphComponent","buttonbar","ButtonBarComponent","button","ButtonComponent","ChartComponent","expando","ExpandoComponent","fragment","FragmentComponent","dateselect","DateSelectComponent","select","SelectComponent","textfield","TextFieldComponent","fileupload","FileUploadComponent","ErrorComponent","ViewFactory","C","Wrap","theme","createTheme","SFTheme","ReduxApp","apiState","ready","useEffect","BodyWithState","chip","ThemeProvider"],"sourceRoot":""}